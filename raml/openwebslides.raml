#%RAML 1.0

traits: !include include/traits.raml

title: Open Webslides
description: This is the documentation of the Open Webslides RESTful API.
version: 1
baseUri: http://localhost:5000/api/
mediaType: application/vnd.api+json
documentation:
  - title: Global
    content: |
      The Open Webslides API is based on the [JSON-API](http://jsonapi.org/) specification version 1.0.
  - title: Authentication
    content: |
      The API supports multiple ways of signing up. Users have the possibility of signing up with an
      [email address](#users_post) (and a password), or with one or more [OAuth2 providers](#auth). A user can
      sign up with an email address, and later decide to sign in using an OAuth2 provider to the same account,
      provided that the email address on the OAuth2 provider is equal.

      The API enforces a token authentication scheme using [JSON Web Tokens](https://jwt.io/). Users should
      obtain a valid authentication token from the [Token API](#token) prior to making any authenticated requests.

      Most of the API is inaccessible without being authenticated, with the exception of:
      - publically viewable decks
      - users stripped of their confidential information
  - title: Authorization
    content: |
      A simple rule-based permission system is implemented in the API. A deck can have one of the following _states_:
      - **Public**: visible to everyone (owner, collaborators, users and guests)
      - **Protected**: visible to owner, collaborators and users (but not to guests)
      - **Private**: visible to owner and collaborators (but not to other users)

/users:
  displayName: Users
  description: User API
  get:
    is: [paginated]
    description: List of all users
  post:
    description: Create a new user (sign up)
  /{id}:
    uriParameters:
      id:
        type: integer
        description: User ID
    get:
      description: Get user
    patch:
      is: [authenticated]
      description: Update user
    put:
      is: [authenticated]
      description: Update user
    delete:
      is: [authenticated]
      description: Delete user

/decks:
  displayName: Decks
  description: Slidedeck API
  get:
    description: List of all visible decks
  post:
    description: Create a new deck
  /{id}:
    uriParameters:
      id:
        type: integer
        description: Deck ID
    get:
      description: Get deck
    patch:
      description: Update deck
    put:
      description: Update deck
    delete:
      description: Delete deck

/confirmation:
  displayName: Confirmation
  description: Email confirmation API
  post:
    description: Confirm a user's email address using the `confirmation_token` sent by email
    body:
      application/vnd.api+json:
        type: object
        properties:
          data:
            type: object
            properties:
              type:
                description: Should be set to `confirmations`
                type: string
              attributes:
                type: object
                properties:
                  confirmationToken:
                    description: Confirmation token sent by email
                    type: string
                    example: SmiSe22FipwyyPY5Ljjk
        example: |
          {
            "data": {
                "type": "confirmations",
                "attributes" : {
                    "confirmationToken": "SmiSe22FipwyyPY5Ljjk"
                }
            }
          }
    responses:
      204:
        description: Returned on successful confirmation
      400:
        description: Returned on error

/token:
  displayName: Token
  description: Token API
  post:
    description: Obtain an authentication token
    body:
      application/vnd.api+json:
        type: object
        properties:
          data:
            type: object
            properties:
              type:
                description: Should be set to `tokens`
                type: string
              attributes:
                type: object
                properties:
                  email: string
                  password: string
        example: |
          {
            "data": {
                "type": "tokens",
                "attributes" : {
                    "email": "savion.mcdermott@altenwerthconsidine.org",
                    "password": "abcd1234"
                }
            }
          }
    responses:
      204:
        description: Returned on successful authentication
        headers:
          Authorization:
            description: JSON Web Token needed to authenticate (bearer token format)
            example: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE0OTI1OTMxNTcsInN1YiI6MSwidmVyIjoxfQ.cFLhHCC4vFmkGg3FkFaDUA2qnk-RxWkz_pt2SY8VOcQ
      401:
        description: Returned on incorrect email or password
      403:
        description: Returned on account not activated yet
  delete:
    is: [authenticated]
    description: Invalidate all tokens
    responses:
      204:
        description: Returned on successful token invalidation
      401:
        description: Returned on incorrect token

/password:
  displayName: Reset password
  description: Reset password API
  post:
    description: Request a `reset_password_token` sent by email
    body:
      application/vnd.api+json:
        type: object
        properties:
          data:
            type: object
            properties:
              type:
                description: Should be set to `passwords`
                type: string
              attributes:
                type: object
                properties:
                  email: string
        example: |
          {
            "data": {
              "type": "passwords",
              "attributes": {
                "email": "may_schaden@ryan.io"
              }
            }
          }
    responses:
      204:
        description: Always returned, whether or not the email address was valid
  put:
    description: See [`PATCH`](#password_patch)
  patch:
    description: Reset a user's password using the `reset_password_token` sent by email
    body:
      application/vnd.api+json:
        type: object
        properties:
          data:
            type: object
            properties:
              type:
                description: Should be set to `passwords`
                type: string
              id:
                description: Required by the JSON-API spec, unused in this spec
                type: string
              attributes:
                type: object
                properties:
                  resetPasswordToken:
                    description: Reset password token sent by email
                    type: string
                    example: JaBSxxc2j7XUYLtJzdXi
                  password:
                    description: New password
                    type: string
                    example: abcd1234
        example: |
          {
            "data": {
                "type": "passwords",
                "id": "",
                "attributes" : {
                    "resetPasswordToken": "JaBSxxc2j7XUYLtJzdXi",
                    "password": "abcd1234"
                }
            }
          }
    responses:
      204:
        description: Returned on successful reset
      400:
        description: Returned on error

/auth:
  displayName: OAuth2
  description: OAuth2 API
  /{provider}:
    get:
      description: OAuth2 redirection URL
    /callback:
      get:
        description: OAuth2 Provider callback URL
